#@TYPE: Machine
#@NAME: Arduino Portenta i.MX8MM
#@SOC: i.MX8MM
#@DESCRIPTION: Machine configuration for Arduino Portenta i.MX8MMini
#@MAINTAINER: Massimiliano Agneni <massimiliano.agneni@iptronix.com>

MACHINEOVERRIDES =. "mx8:mx8m:mx8mm:imx8mmevk:"

require conf/machine/include/imx-base.inc
require conf/machine/include/tune-cortexa53.inc

IMX_DEFAULT_BSP = "nxp"

MACHINE_FEATURES += " pci wifi bluetooth optee alsa"

KERNEL_DEVICETREE = ""
PREFERRED_PROVIDER_virtual/dtb ?= "lmp-device-tree"
KERNEL_DEFCONFIG = "portenta_m8_defconfig"

UBOOT_MACHINE_portenta-m8 = "portenta-m8_config"
SPL_BINARY = "spl/u-boot-spl.bin"

# Set DDR FIRMWARE
DDR_FIRMWARE_NAME = "lpddr4_pmu_train_1d_imem.bin lpddr4_pmu_train_1d_dmem.bin lpddr4_pmu_train_2d_imem.bin lpddr4_pmu_train_2d_dmem.bin"

# Set u-boot DTB
UBOOT_DTB_NAME = "portenta-m8.dtb"

# Set imx-mkimage boot target
IMXBOOT_TARGETS = "${@bb.utils.contains('UBOOT_CONFIG', 'fspi', 'flash_evk_flexspi', 'flash_evk', d)}"

# Set Serial console
SERIAL_CONSOLE = "115200;ttymxc2"

BOOT_SPACE = "65536"

LOADADDR = ""
UBOOT_MAKE_TARGET = ""
IMX_BOOT_SEEK = "33"
# make sure we build the devicetree and add it to lmp-base builds
EXTRA_IMAGEDEPENDS_append = " virtual/dtb "
IMAGE_BOOT_FILES_append_lmp-base = " devicetree/arduino_portenta-m8.dtb;portenta-m8.dtb"

OSTREE_KERNEL_ARGS_portenta-m8 ?= "console=tty1 console=ttymxc2,115200 earlycon=ec_imx6q,0x30880000,115200 root=/dev/mmcblk2p2 rootfstype=ext4"
OPTEE_BIN_EXT = "8mm"

# Add additional firmware
MACHINE_FIRMWARE_append = "linux-firmware linux-firmware-cyw-fmac-fw linux-firmware-cyw-fmac-nvram linux-firmware-cyw-bt-patch"
